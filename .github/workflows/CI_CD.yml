name: Combined CI / Release

on:
  workflow_dispatch:
  push:
    branches:
      - '**'

jobs:
  shared_ci_cd:
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    uses: mu88/github-actions/.github/workflows/ci-cd.yml@f252e7d1c94652b5e51996174f6e2977ef88f1a5
    with:
      docker-publish-mode: regular_and_chiseled
      docker-publish-project: 'RaspiFanController/RaspiFanController.csproj'
      requires-docker-login: true
      sonar-key: mu88_RaspiFanController
    secrets:
      sonar-token: ${{ secrets.SONAR_TOKEN }}

  ci_cd:
    runs-on: ubuntu-latest

    needs: shared_ci_cd

    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up .NET
        uses: actions/setup-dotnet@v5
        with:
          cache: true
          cache-dependency-path: "**/packages.lock.json"
          global-json-file: global.json

      - name: Build .NET single-file EXE
        run: |
          dotnet publish RaspiFanController/RaspiFanController.csproj \
            --output ${{ runner.temp }}/Release/ \
            --runtime linux-arm64 \
            --self-contained \
            /p:PublishSingleFile=true

      - name: Create ZIP for release
        if: ${{ needs.shared_ci_cd.outputs.is-release == 'true' }}
        run: |
          cd ${{ runner.temp }}/Release/
          zip -r RaspiFanController.${{ needs.shared_ci_cd.outputs.release-version }}.zip *

      - name: Determine release notes
        id: changelog
        if: ${{ needs.shared_ci_cd.outputs.is-release == 'true' }}
        run: |
          dotnet tool restore

          $release_notes = dotnet tool versionize changelog -v ${{ needs.shared_ci_cd.outputs.release-version }}
          if [ -z "$release_notes" ]; then
            echo "No release notes generated, something went wrong."
            exit 1
          fi

          echo "changes=$release_notes" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: ${{ needs.shared_ci_cd.outputs.is-release == 'true' }}
        with:
          files: ${{ runner.temp }}/Release/RaspiFanController*.zip
          name: ${{ needs.shared_ci_cd.outputs.release-version }}
          tag_name: v${{ needs.shared_ci_cd.outputs.release-version }}
          body: ${{ steps.changelog.outputs.changes }}
